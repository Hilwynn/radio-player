{"version":3,"sources":["components/Station/index.js","components/app.js","index.js"],"names":["Station","_this$props","this","props","color","image","name","stations","url","availableStations","length","channelColor","backgroundColor","concat","react_default","a","createElement","className","style","src","alt","controls","type","React","Component","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getValueInput","e","inputValue","target","value","toLowerCase","setState","searchInput","filterStations","radioStations","state","filteredRadioStations","filter","station","includes","_this2","fetch","then","response","json","channels","_this$state","process","onChange","placeholder","map","channel","components_Station","key","id","liveaudio","ReactDOM","render","app","document","getElementById"],"mappings":"4LA4CeA,0LAxCJ,IAAAC,EAOHC,KAAKC,MALPC,EAFKH,EAELG,MACAC,EAHKJ,EAGLI,MACAC,EAJKL,EAILK,KACAC,EALKN,EAKLM,SACAC,EANKP,EAMLO,IAEIC,EAAoBF,EAASG,OAC7BC,EAAe,CACnBC,gBAAe,IAAAC,OAAMT,IAGvB,OACEU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACZR,EAAoB,EACnBK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBC,MAAOP,GACxCG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKG,IAAKd,EAAOe,IAAKd,KAExBQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,UAAKV,IAEPQ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOK,UAAQ,GACbP,EAAAC,EAAAC,cAAA,UAAQG,IAAKX,EAAKc,KAAK,eADzB,mDAQNR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAlCHM,IAAMC,YCyEbC,oBAvEb,SAAAA,EAAYtB,GAAO,IAAAuB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAzB,KAAAuB,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAzB,KAAAyB,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAA7B,KAAMC,KAmBR6B,cAAgB,SAACC,GACf,IAAMC,EAAaD,EAAEE,OAAOC,MAAMC,cAClCX,EAAKY,SAAS,CAAEC,YAAaL,IAC7BR,EAAKc,eAAeN,IAvBHR,EA0BnBc,eAAiB,SAACN,GAAe,IACvBO,EAAkBf,EAAKgB,MAAvBD,cACW,KAAfP,EACFR,EAAKY,SAAS,CACZK,sBAAuB,KAGzBjB,EAAKY,SAAS,CACZK,sBAAuBF,EAAcG,OAAO,SAAAC,GAAO,OACjDA,EAAQvC,KAAK+B,cAAcS,SAASZ,QAjC1CR,EAAKgB,MAAQ,CACXC,sBAAuB,GACvBJ,YAAa,GACbE,cAAe,IALAf,mFASC,IAAAqB,EAAA7C,KAElB8C,MADe,0DACDC,KAAK,SAACC,GAClB,OAAOA,EAASC,SACfF,KAAK,SAACE,GACPJ,EAAKT,SAAS,CACZG,cAAeU,EAAKC,8CAyBjB,IAAAC,EAIHnD,KAAKwC,MAFPH,EAFKc,EAELd,YACAI,EAHKU,EAGLV,sBAGF,OACE7B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WACdH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAChBH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,OAAKG,IAAG,GAAAN,OAAKyC,gBAAL,6BAAwDlC,IAAI,4BACpEN,EAAAC,EAAAC,cAAA,SACEV,KAAK,SACLiD,SAAUrD,KAAK8B,cACfwB,YAAY,kBACZpB,MAAOG,EACPjB,KAAK,UAERqB,EAAsBc,IAAI,SAAAC,GAAO,OAChC5C,EAAAC,EAAAC,cAAC2C,EAAD,CACEC,IAAKF,EAAQG,GACbzD,MAAOsD,EAAQtD,MACfC,MAAOqD,EAAQrD,MACfC,KAAMoD,EAAQpD,KACdC,SAAUoC,EACVnC,IAAKkD,EAAQI,UAAUtD,gBAlEjBe,IAAMC,YCCxBuC,IAASC,OAAOlD,EAAAC,EAAAC,cAACiD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.632246a3.chunk.js","sourcesContent":["import React from \"react\"\nimport \"./style.css\"\n\nclass Station extends React.Component {\n  render() {\n    const {\n      color,\n      image,\n      name,\n      stations,\n      url\n    } = this.props\n    const availableStations = stations.length\n    const channelColor = {\n      backgroundColor: `#${color}`\n    }\n\n    return (\n      <div className=\"station-wrapper\">\n        {availableStations > 0 ? (\n          <div className=\"station-container\" style={channelColor}>\n            <div className=\"station-image\">\n              <img src={image} alt={name} />\n            </div>\n            <div className=\"station-body\">\n              <div className=\"station-name\">\n                <h2>{name}</h2>\n              </div>\n              <div>\n                <audio controls>\n                  <source src={url} type=\"audio/mpeg\" />\n                  Your browser does not support the audio tag.\n                </audio>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"empty-station\" />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Station\n","import React from \"react\"\nimport Station from \"./Station\"\nimport \"../index.css\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      filteredRadioStations: [],\n      searchInput: \"\",\n      radioStations: []\n    }\n  }\n\n  componentDidMount() {\n    const apiUrl = \"https://api.sr.se/api/v2/channels?format=json&size=100\"\n    fetch(apiUrl).then((response) => {\n      return response.json()\n    }).then((json) => {\n      this.setState({\n        radioStations: json.channels\n      })\n    })\n  }\n\n  getValueInput = (e) => {\n    const inputValue = e.target.value.toLowerCase()\n    this.setState({ searchInput: inputValue })\n    this.filterStations(inputValue)\n  }\n\n  filterStations = (inputValue) => {\n    const { radioStations } = this.state\n    if (inputValue === \"\") {\n      this.setState({\n        filteredRadioStations: []\n      })\n    } else {\n      this.setState({\n        filteredRadioStations: radioStations.filter(station =>\n          station.name.toLowerCase().includes(inputValue))\n      })\n    }\n  }\n\n  render() {\n    const {\n      searchInput,\n      filteredRadioStations\n    } = this.state\n\n    return (\n      <main className=\"wrapper\">\n        <header className=\"header\">\n          <h1>Radiohubben</h1>\n          <img src={`${process.env.PUBLIC_URL}/images/sverigesradio.png`} alt=\"Sveriges Radios logotyp\" />\n          <input\n            name=\"search\"\n            onChange={this.getValueInput}\n            placeholder=\"SÃ¶k kanal...\"\n            value={searchInput}\n            type=\"text\" />\n        </header>\n        {filteredRadioStations.map(channel =>\n          <Station\n            key={channel.id}\n            color={channel.color}\n            image={channel.image}\n            name={channel.name}\n            stations={filteredRadioStations}\n            url={channel.liveaudio.url} />)}\n      </main>\n    )\n  }\n}\n\nexport default App\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./components/app\"\r\nimport \"./index.css\"\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))\r\n"],"sourceRoot":""}